<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loststars.tccbootx.user.dao.UserDOMapper">
  <resultMap id="BaseResultMap" type="com.loststars.tccbootx.user.dataobject.UserDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="wallet_amount" jdbcType="DECIMAL" property="walletAmount" />
    <result column="red_packet_amount" jdbcType="DECIMAL" property="redPacketAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, wallet_amount, red_packet_amount
  </sql>
  <select id="selectByExample" parameterType="com.loststars.tccbootx.user.dataobject.UserDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.loststars.tccbootx.user.dataobject.UserDOExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.loststars.tccbootx.user.dataobject.UserDO">
    insert into user (id, username, wallet_amount, 
      red_packet_amount)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{walletAmount,jdbcType=DECIMAL}, 
      #{redPacketAmount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.loststars.tccbootx.user.dataobject.UserDO">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="walletAmount != null">
        wallet_amount,
      </if>
      <if test="redPacketAmount != null">
        red_packet_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="walletAmount != null">
        #{walletAmount,jdbcType=DECIMAL},
      </if>
      <if test="redPacketAmount != null">
        #{redPacketAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.loststars.tccbootx.user.dataobject.UserDOExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.walletAmount != null">
        wallet_amount = #{record.walletAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.redPacketAmount != null">
        red_packet_amount = #{record.redPacketAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      wallet_amount = #{record.walletAmount,jdbcType=DECIMAL},
      red_packet_amount = #{record.redPacketAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.loststars.tccbootx.user.dataobject.UserDO">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="walletAmount != null">
        wallet_amount = #{walletAmount,jdbcType=DECIMAL},
      </if>
      <if test="redPacketAmount != null">
        red_packet_amount = #{redPacketAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.loststars.tccbootx.user.dataobject.UserDO">
    update user
    set username = #{username,jdbcType=VARCHAR},
      wallet_amount = #{walletAmount,jdbcType=DECIMAL},
      red_packet_amount = #{redPacketAmount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="reduceWallet">
    update user
    set
      wallet_amount = wallet_amount - #{walletAmount,jdbcType=DECIMAL}
    where
      id = #{id,jdbcType=INTEGER}
    and
      wallet_amount >= #{walletAmount,jdbcType=DECIMAL}
  </update>
  <update id="addWallet">
    update user
    set
      wallet_amount = wallet_amount + #{walletAmount,jdbcType=DECIMAL}
    where
      id = #{id,jdbcType=INTEGER}
  </update>
  <update id="reduceRedPacket">
    update user
    set
      red_packet_amount = red_packet_amount - #{redPacketAmount,jdbcType=DECIMAL}
    where
      id = #{id,jdbcType=INTEGER}
    and
      red_packet_amount >= #{redPacketAmount,jdbcType=DECIMAL}
  </update>
  <update id="addRedPacket">
    update user
    set
      red_packet_amount = red_packet_amount + #{redPacketAmount,jdbcType=DECIMAL}
    where
      id = #{id,jdbcType=INTEGER}
  </update>
</mapper>